"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/blogService.ts":
/*!*************************************!*\
  !*** ./src/services/blogService.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlogService: function() { return /* binding */ BlogService; }\n/* harmony export */ });\n// Types\n// Constants\nconst API_ENDPOINTS = {\n    ARTICLES: \"http://localhost:3001/api/blog/articles\"\n};\n// Service\nclass BlogService {\n    static async fetchBlogPosts() {\n        let first = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 20, after = arguments.length > 1 ? arguments[1] : void 0;\n        try {\n            const params = new URLSearchParams({\n                limit: first.toString(),\n                ...after && {\n                    cursor: after\n                }\n            });\n            const response = await fetch(\"\".concat(API_ENDPOINTS.ARTICLES, \"?\").concat(params));\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch blog posts: \".concat(response.statusText));\n            }\n            const result = await response.json();\n            if (!result.success || !result.data) {\n                throw new Error(result.error || \"Failed to fetch blog posts\");\n            }\n            return {\n                posts: result.data.articles,\n                hasNextPage: result.data.pageInfo.hasNextPage,\n                endCursor: result.data.pageInfo.endCursor\n            };\n        } catch (error) {\n            console.error(\"Error fetching blog posts:\", error);\n            throw error;\n        }\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9ibG9nU2VydmljZS50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsUUFBUTtBQXVDUixZQUFZO0FBQ1osTUFBTUEsZ0JBQWdCO0lBQ3BCQyxVQUFVO0FBQ1o7QUFFQSxVQUFVO0FBQ0gsTUFBTUM7SUFDWCxhQUFhQyxpQkFBNEg7WUFBN0dDLFFBQUFBLGlFQUFnQixJQUFJQztRQUM5QyxJQUFJO1lBQ0YsTUFBTUMsU0FBUyxJQUFJQyxnQkFBZ0I7Z0JBQ2pDQyxPQUFPSixNQUFNSyxRQUFRO2dCQUNyQixHQUFJSixTQUFTO29CQUFFSyxRQUFRTDtnQkFBTSxDQUFDO1lBQ2hDO1lBRUEsTUFBTU0sV0FBVyxNQUFNQyxNQUFNLEdBQTZCTixPQUExQk4sY0FBY0MsUUFBUSxFQUFDLEtBQVUsT0FBUEs7WUFFMUQsSUFBSSxDQUFDSyxTQUFTRSxFQUFFLEVBQUU7Z0JBQ2hCLE1BQU0sSUFBSUMsTUFBTSwrQkFBbUQsT0FBcEJILFNBQVNJLFVBQVU7WUFDcEU7WUFFQSxNQUFNQyxTQUF5QyxNQUFNTCxTQUFTTSxJQUFJO1lBRWxFLElBQUksQ0FBQ0QsT0FBT0UsT0FBTyxJQUFJLENBQUNGLE9BQU9HLElBQUksRUFBRTtnQkFDbkMsTUFBTSxJQUFJTCxNQUFNRSxPQUFPSSxLQUFLLElBQUk7WUFDbEM7WUFFQSxPQUFPO2dCQUNMQyxPQUFPTCxPQUFPRyxJQUFJLENBQUNHLFFBQVE7Z0JBQzNCQyxhQUFhUCxPQUFPRyxJQUFJLENBQUNLLFFBQVEsQ0FBQ0QsV0FBVztnQkFDN0NFLFdBQVdULE9BQU9HLElBQUksQ0FBQ0ssUUFBUSxDQUFDQyxTQUFTO1lBQzNDO1FBQ0YsRUFBRSxPQUFPTCxPQUFPO1lBQ2RNLFFBQVFOLEtBQUssQ0FBQyw4QkFBOEJBO1lBQzVDLE1BQU1BO1FBQ1I7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zZXJ2aWNlcy9ibG9nU2VydmljZS50cz9lMjM3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFR5cGVzXG5leHBvcnQgaW50ZXJmYWNlIEJsb2dJbWFnZSB7XG4gIHVybDogc3RyaW5nO1xuICBhbHRUZXh0Pzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEJsb2dBdXRob3Ige1xuICBuYW1lOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmxvZ1Bvc3Qge1xuICBpZDogc3RyaW5nO1xuICB0aXRsZTogc3RyaW5nO1xuICBleGNlcnB0Pzogc3RyaW5nO1xuICBjb250ZW50OiBzdHJpbmc7XG4gIHB1Ymxpc2hlZEF0OiBzdHJpbmc7XG4gIGltYWdlPzogQmxvZ0ltYWdlO1xuICBhdXRob3I/OiBCbG9nQXV0aG9yO1xuICBibG9nOiB7XG4gICAgdGl0bGU6IHN0cmluZztcbiAgfTtcbn1cblxuaW50ZXJmYWNlIFBhZ2VJbmZvIHtcbiAgaGFzTmV4dFBhZ2U6IGJvb2xlYW47XG4gIGVuZEN1cnNvcjogc3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgQXBpUmVzcG9uc2U8VD4ge1xuICBzdWNjZXNzOiBib29sZWFuO1xuICBkYXRhPzogVDtcbiAgZXJyb3I/OiBzdHJpbmc7XG59XG5cbmludGVyZmFjZSBCbG9nUG9zdHNSZXNwb25zZSB7XG4gIGFydGljbGVzOiBCbG9nUG9zdFtdO1xuICBwYWdlSW5mbzogUGFnZUluZm87XG59XG5cbi8vIENvbnN0YW50c1xuY29uc3QgQVBJX0VORFBPSU5UUyA9IHtcbiAgQVJUSUNMRVM6ICdodHRwOi8vbG9jYWxob3N0OjMwMDEvYXBpL2Jsb2cvYXJ0aWNsZXMnLFxufSBhcyBjb25zdDtcblxuLy8gU2VydmljZVxuZXhwb3J0IGNsYXNzIEJsb2dTZXJ2aWNlIHtcbiAgc3RhdGljIGFzeW5jIGZldGNoQmxvZ1Bvc3RzKGZpcnN0OiBudW1iZXIgPSAyMCwgYWZ0ZXI/OiBzdHJpbmcpOiBQcm9taXNlPHsgcG9zdHM6IEJsb2dQb3N0W10sIGhhc05leHRQYWdlOiBib29sZWFuLCBlbmRDdXJzb3I6IHN0cmluZyB9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgICAgICBsaW1pdDogZmlyc3QudG9TdHJpbmcoKSxcbiAgICAgICAgLi4uKGFmdGVyICYmIHsgY3Vyc29yOiBhZnRlciB9KSxcbiAgICAgIH0pO1xuXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke0FQSV9FTkRQT0lOVFMuQVJUSUNMRVN9PyR7cGFyYW1zfWApO1xuXG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGZldGNoIGJsb2cgcG9zdHM6ICR7cmVzcG9uc2Uuc3RhdHVzVGV4dH1gKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgcmVzdWx0OiBBcGlSZXNwb25zZTxCbG9nUG9zdHNSZXNwb25zZT4gPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICAgIGlmICghcmVzdWx0LnN1Y2Nlc3MgfHwgIXJlc3VsdC5kYXRhKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihyZXN1bHQuZXJyb3IgfHwgJ0ZhaWxlZCB0byBmZXRjaCBibG9nIHBvc3RzJyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBvc3RzOiByZXN1bHQuZGF0YS5hcnRpY2xlcyxcbiAgICAgICAgaGFzTmV4dFBhZ2U6IHJlc3VsdC5kYXRhLnBhZ2VJbmZvLmhhc05leHRQYWdlLFxuICAgICAgICBlbmRDdXJzb3I6IHJlc3VsdC5kYXRhLnBhZ2VJbmZvLmVuZEN1cnNvcixcbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGJsb2cgcG9zdHM6JywgZXJyb3IpO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCB0eXBlIHsgQmxvZ1Bvc3QgfTsgXG4iXSwibmFtZXMiOlsiQVBJX0VORFBPSU5UUyIsIkFSVElDTEVTIiwiQmxvZ1NlcnZpY2UiLCJmZXRjaEJsb2dQb3N0cyIsImZpcnN0IiwiYWZ0ZXIiLCJwYXJhbXMiLCJVUkxTZWFyY2hQYXJhbXMiLCJsaW1pdCIsInRvU3RyaW5nIiwiY3Vyc29yIiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwiRXJyb3IiLCJzdGF0dXNUZXh0IiwicmVzdWx0IiwianNvbiIsInN1Y2Nlc3MiLCJkYXRhIiwiZXJyb3IiLCJwb3N0cyIsImFydGljbGVzIiwiaGFzTmV4dFBhZ2UiLCJwYWdlSW5mbyIsImVuZEN1cnNvciIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/blogService.ts\n"));

/***/ })

});