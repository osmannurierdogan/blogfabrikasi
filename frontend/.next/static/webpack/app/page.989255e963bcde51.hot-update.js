"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/blogService.ts":
/*!*************************************!*\
  !*** ./src/services/blogService.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlogService: function() { return /* binding */ BlogService; }\n/* harmony export */ });\nclass BlogService {\n    static async fetchBlogPosts() {\n        let first = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 20, after = arguments.length > 1 ? arguments[1] : void 0;\n        try {\n            var _result_data_articles, _result_data;\n            const query = \"\\n        query GetBlogPosts($first: Int!, $after: String) {\\n          articles(first: $first, after: $after, sortKey: PUBLISHED_AT, reverse: true) {\\n            edges {\\n              node {\\n                id\\n                title\\n                excerpt\\n                content\\n                publishedAt\\n                image {\\n                  url\\n                  altText\\n                }\\n                author {\\n                  name\\n                }\\n                blog {\\n                  title\\n                }\\n              }\\n            }\\n            pageInfo {\\n              hasNextPage\\n              endCursor\\n            }\\n          }\\n        }\\n      \";\n            console.log(\"Fetching blog posts with variables:\", {\n                first,\n                after\n            });\n            const response = await fetch(this.API_URL, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    query,\n                    variables: {\n                        first,\n                        after\n                    }\n                })\n            });\n            if (!response.ok) {\n                const errorText = await response.text();\n                console.error(\"API Error Response:\", errorText);\n                throw new Error(\"Failed to fetch blog posts: \".concat(response.statusText));\n            }\n            const result = await response.json();\n            console.log(\"API Response:\", JSON.stringify(result, null, 2));\n            if (!((_result_data = result.data) === null || _result_data === void 0 ? void 0 : (_result_data_articles = _result_data.articles) === null || _result_data_articles === void 0 ? void 0 : _result_data_articles.edges)) {\n                console.warn(\"No articles found in response:\", result);\n                return {\n                    posts: [],\n                    hasNextPage: false,\n                    endCursor: \"\"\n                };\n            }\n            const posts = result.data.articles.edges.map((edge)=>edge.node);\n            console.log(\"Found \".concat(posts.length, \" blog posts\"));\n            return {\n                posts,\n                hasNextPage: result.data.articles.pageInfo.hasNextPage,\n                endCursor: result.data.articles.pageInfo.endCursor\n            };\n        } catch (error) {\n            console.error(\"Error fetching blog posts:\", error);\n            throw error;\n        }\n    }\n}\nBlogService.API_URL = \"http://localhost:3001/api/shopify/storefront\";\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9ibG9nU2VydmljZS50cyIsIm1hcHBpbmdzIjoiOzs7O0FBZ0NPLE1BQU1BO0lBR1gsYUFBYUMsaUJBQTRIO1lBQTdHQyxRQUFBQSxpRUFBZ0IsSUFBSUM7UUFDOUMsSUFBSTtnQkFxREdDLHVCQUFBQTtZQXBETCxNQUFNQyxRQUFTO1lBOEJmQyxRQUFRQyxHQUFHLENBQUMsdUNBQXVDO2dCQUFFTDtnQkFBT0M7WUFBTTtZQUVsRSxNQUFNSyxXQUFXLE1BQU1DLE1BQU0sSUFBSSxDQUFDQyxPQUFPLEVBQUU7Z0JBQ3pDQyxRQUFRO2dCQUNSQyxTQUFTO29CQUNQLGdCQUFnQjtnQkFDbEI7Z0JBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztvQkFDbkJWO29CQUNBVyxXQUFXO3dCQUFFZDt3QkFBT0M7b0JBQU07Z0JBQzVCO1lBQ0Y7WUFFQSxJQUFJLENBQUNLLFNBQVNTLEVBQUUsRUFBRTtnQkFDaEIsTUFBTUMsWUFBWSxNQUFNVixTQUFTVyxJQUFJO2dCQUNyQ2IsUUFBUWMsS0FBSyxDQUFDLHVCQUF1QkY7Z0JBQ3JDLE1BQU0sSUFBSUcsTUFBTSwrQkFBbUQsT0FBcEJiLFNBQVNjLFVBQVU7WUFDcEU7WUFFQSxNQUFNbEIsU0FBdUIsTUFBTUksU0FBU2UsSUFBSTtZQUNoRGpCLFFBQVFDLEdBQUcsQ0FBQyxpQkFBaUJPLEtBQUtDLFNBQVMsQ0FBQ1gsUUFBUSxNQUFNO1lBRTFELElBQUksR0FBQ0EsZUFBQUEsT0FBT29CLElBQUksY0FBWHBCLG9DQUFBQSx3QkFBQUEsYUFBYXFCLFFBQVEsY0FBckJyQiw0Q0FBQUEsc0JBQXVCc0IsS0FBSyxHQUFFO2dCQUNqQ3BCLFFBQVFxQixJQUFJLENBQUMsa0NBQWtDdkI7Z0JBQy9DLE9BQU87b0JBQUV3QixPQUFPLEVBQUU7b0JBQUVDLGFBQWE7b0JBQU9DLFdBQVc7Z0JBQUc7WUFDeEQ7WUFFQSxNQUFNRixRQUFReEIsT0FBT29CLElBQUksQ0FBQ0MsUUFBUSxDQUFDQyxLQUFLLENBQUNLLEdBQUcsQ0FBQ0MsQ0FBQUEsT0FBUUEsS0FBS0MsSUFBSTtZQUM5RDNCLFFBQVFDLEdBQUcsQ0FBQyxTQUFzQixPQUFicUIsTUFBTU0sTUFBTSxFQUFDO1lBRWxDLE9BQU87Z0JBQ0xOO2dCQUNBQyxhQUFhekIsT0FBT29CLElBQUksQ0FBQ0MsUUFBUSxDQUFDVSxRQUFRLENBQUNOLFdBQVc7Z0JBQ3REQyxXQUFXMUIsT0FBT29CLElBQUksQ0FBQ0MsUUFBUSxDQUFDVSxRQUFRLENBQUNMLFNBQVM7WUFDcEQ7UUFDRixFQUFFLE9BQU9WLE9BQU87WUFDZGQsUUFBUWMsS0FBSyxDQUFDLDhCQUE4QkE7WUFDNUMsTUFBTUE7UUFDUjtJQUNGO0FBQ0Y7QUEzRWFwQixZQUNhVSxVQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zZXJ2aWNlcy9ibG9nU2VydmljZS50cz9lMjM3Il0sInNvdXJjZXNDb250ZW50IjpbImludGVyZmFjZSBCbG9nUG9zdCB7XG4gIGlkOiBzdHJpbmc7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIGV4Y2VycHQ/OiBzdHJpbmc7XG4gIGNvbnRlbnQ6IHN0cmluZztcbiAgcHVibGlzaGVkQXQ6IHN0cmluZztcbiAgaW1hZ2U/OiB7XG4gICAgdXJsOiBzdHJpbmc7XG4gICAgYWx0VGV4dD86IHN0cmluZztcbiAgfTtcbiAgYXV0aG9yPzoge1xuICAgIG5hbWU6IHN0cmluZztcbiAgfTtcbiAgYmxvZzoge1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gIH07XG59XG5cbmludGVyZmFjZSBCbG9nUmVzcG9uc2Uge1xuICBkYXRhOiB7XG4gICAgYXJ0aWNsZXM6IHtcbiAgICAgIGVkZ2VzOiBBcnJheTx7XG4gICAgICAgIG5vZGU6IEJsb2dQb3N0O1xuICAgICAgfT47XG4gICAgICBwYWdlSW5mbzoge1xuICAgICAgICBoYXNOZXh0UGFnZTogYm9vbGVhbjtcbiAgICAgICAgZW5kQ3Vyc29yOiBzdHJpbmc7XG4gICAgICB9O1xuICAgIH07XG4gIH07XG59XG5cbmV4cG9ydCBjbGFzcyBCbG9nU2VydmljZSB7XG4gIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IEFQSV9VUkwgPSAnaHR0cDovL2xvY2FsaG9zdDozMDAxL2FwaS9zaG9waWZ5L3N0b3JlZnJvbnQnO1xuXG4gIHN0YXRpYyBhc3luYyBmZXRjaEJsb2dQb3N0cyhmaXJzdDogbnVtYmVyID0gMjAsIGFmdGVyPzogc3RyaW5nKTogUHJvbWlzZTx7IHBvc3RzOiBCbG9nUG9zdFtdLCBoYXNOZXh0UGFnZTogYm9vbGVhbiwgZW5kQ3Vyc29yOiBzdHJpbmcgfT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBxdWVyeSA9IGBcbiAgICAgICAgcXVlcnkgR2V0QmxvZ1Bvc3RzKCRmaXJzdDogSW50ISwgJGFmdGVyOiBTdHJpbmcpIHtcbiAgICAgICAgICBhcnRpY2xlcyhmaXJzdDogJGZpcnN0LCBhZnRlcjogJGFmdGVyLCBzb3J0S2V5OiBQVUJMSVNIRURfQVQsIHJldmVyc2U6IHRydWUpIHtcbiAgICAgICAgICAgIGVkZ2VzIHtcbiAgICAgICAgICAgICAgbm9kZSB7XG4gICAgICAgICAgICAgICAgaWRcbiAgICAgICAgICAgICAgICB0aXRsZVxuICAgICAgICAgICAgICAgIGV4Y2VycHRcbiAgICAgICAgICAgICAgICBjb250ZW50XG4gICAgICAgICAgICAgICAgcHVibGlzaGVkQXRcbiAgICAgICAgICAgICAgICBpbWFnZSB7XG4gICAgICAgICAgICAgICAgICB1cmxcbiAgICAgICAgICAgICAgICAgIGFsdFRleHRcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYXV0aG9yIHtcbiAgICAgICAgICAgICAgICAgIG5hbWVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYmxvZyB7XG4gICAgICAgICAgICAgICAgICB0aXRsZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFnZUluZm8ge1xuICAgICAgICAgICAgICBoYXNOZXh0UGFnZVxuICAgICAgICAgICAgICBlbmRDdXJzb3JcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIGA7XG5cbiAgICAgIGNvbnNvbGUubG9nKCdGZXRjaGluZyBibG9nIHBvc3RzIHdpdGggdmFyaWFibGVzOicsIHsgZmlyc3QsIGFmdGVyIH0pO1xuXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHRoaXMuQVBJX1VSTCwge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICB2YXJpYWJsZXM6IHsgZmlyc3QsIGFmdGVyIH0sXG4gICAgICAgIH0pLFxuICAgICAgfSk7XG5cbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgY29uc3QgZXJyb3JUZXh0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xuICAgICAgICBjb25zb2xlLmVycm9yKCdBUEkgRXJyb3IgUmVzcG9uc2U6JywgZXJyb3JUZXh0KTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZmV0Y2ggYmxvZyBwb3N0czogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgICAgfVxuXG4gICAgICBjb25zdCByZXN1bHQ6IEJsb2dSZXNwb25zZSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgIGNvbnNvbGUubG9nKCdBUEkgUmVzcG9uc2U6JywgSlNPTi5zdHJpbmdpZnkocmVzdWx0LCBudWxsLCAyKSk7XG5cbiAgICAgIGlmICghcmVzdWx0LmRhdGE/LmFydGljbGVzPy5lZGdlcykge1xuICAgICAgICBjb25zb2xlLndhcm4oJ05vIGFydGljbGVzIGZvdW5kIGluIHJlc3BvbnNlOicsIHJlc3VsdCk7XG4gICAgICAgIHJldHVybiB7IHBvc3RzOiBbXSwgaGFzTmV4dFBhZ2U6IGZhbHNlLCBlbmRDdXJzb3I6ICcnIH07XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHBvc3RzID0gcmVzdWx0LmRhdGEuYXJ0aWNsZXMuZWRnZXMubWFwKGVkZ2UgPT4gZWRnZS5ub2RlKTtcbiAgICAgIGNvbnNvbGUubG9nKGBGb3VuZCAke3Bvc3RzLmxlbmd0aH0gYmxvZyBwb3N0c2ApO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBwb3N0cyxcbiAgICAgICAgaGFzTmV4dFBhZ2U6IHJlc3VsdC5kYXRhLmFydGljbGVzLnBhZ2VJbmZvLmhhc05leHRQYWdlLFxuICAgICAgICBlbmRDdXJzb3I6IHJlc3VsdC5kYXRhLmFydGljbGVzLnBhZ2VJbmZvLmVuZEN1cnNvclxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgYmxvZyBwb3N0czonLCBlcnJvcik7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgeyBCbG9nUG9zdCB9OyBcbiJdLCJuYW1lcyI6WyJCbG9nU2VydmljZSIsImZldGNoQmxvZ1Bvc3RzIiwiZmlyc3QiLCJhZnRlciIsInJlc3VsdCIsInF1ZXJ5IiwiY29uc29sZSIsImxvZyIsInJlc3BvbnNlIiwiZmV0Y2giLCJBUElfVVJMIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwidmFyaWFibGVzIiwib2siLCJlcnJvclRleHQiLCJ0ZXh0IiwiZXJyb3IiLCJFcnJvciIsInN0YXR1c1RleHQiLCJqc29uIiwiZGF0YSIsImFydGljbGVzIiwiZWRnZXMiLCJ3YXJuIiwicG9zdHMiLCJoYXNOZXh0UGFnZSIsImVuZEN1cnNvciIsIm1hcCIsImVkZ2UiLCJub2RlIiwibGVuZ3RoIiwicGFnZUluZm8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/blogService.ts\n"));

/***/ })

});