"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/blogService.ts":
/*!*************************************!*\
  !*** ./src/services/blogService.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlogService: function() { return /* binding */ BlogService; }\n/* harmony export */ });\n// Types\n// Constants\nconst API_ENDPOINTS = {\n    STOREFRONT: \"http://localhost:3001/api/shopify/storefront\"\n};\n// GraphQL Queries\nconst BLOG_POSTS_QUERY = \"\\n  query GetBlogPosts($first: Int!, $after: String) {\\n    articles(first: $first, after: $after, sortKey: PUBLISHED_AT, reverse: true) {\\n      edges {\\n        node {\\n          id\\n          title\\n          excerpt\\n          content\\n          publishedAt\\n          image {\\n            url\\n            altText\\n          }\\n          author {\\n            name\\n          }\\n          blog {\\n            title\\n          }\\n        }\\n      }\\n      pageInfo {\\n        hasNextPage\\n        endCursor\\n      }\\n    }\\n  }\\n\";\n// Service\nclass BlogService {\n    static async fetchBlogPosts() {\n        let first = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 20, after = arguments.length > 1 ? arguments[1] : void 0;\n        try {\n            const response = await this.makeGraphQLRequest(BLOG_POSTS_QUERY, {\n                first,\n                after\n            });\n            return this.processBlogPostsResponse(response);\n        } catch (error) {\n            this.handleError(error);\n            throw error;\n        }\n    }\n    static async makeGraphQLRequest(query, variables) {\n        const response = await fetch(API_ENDPOINTS.STOREFRONT, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                query,\n                variables\n            })\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch blog posts: \".concat(response.statusText));\n        }\n        return response.json();\n    }\n    static processBlogPostsResponse(result) {\n        var _result_data_articles, _result_data;\n        if (!((_result_data = result.data) === null || _result_data === void 0 ? void 0 : (_result_data_articles = _result_data.articles) === null || _result_data_articles === void 0 ? void 0 : _result_data_articles.edges)) {\n            return {\n                posts: [],\n                hasNextPage: false,\n                endCursor: \"\"\n            };\n        }\n        return {\n            posts: result.data.articles.edges.map((edge)=>edge.node),\n            hasNextPage: result.data.articles.pageInfo.hasNextPage,\n            endCursor: result.data.articles.pageInfo.endCursor\n        };\n    }\n    static handleError(error) {\n        console.error(\"Error in BlogService:\", error);\n        throw error instanceof Error ? error : new Error(\"An unknown error occurred\");\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9ibG9nU2VydmljZS50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsUUFBUTtBQWlEUixZQUFZO0FBQ1osTUFBTUEsZ0JBQWdCO0lBQ3BCQyxZQUFZO0FBQ2Q7QUFFQSxrQkFBa0I7QUFDbEIsTUFBTUMsbUJBQW9CO0FBOEIxQixVQUFVO0FBQ0gsTUFBTUM7SUFDWCxhQUFhQyxpQkFBa0Y7WUFBbkVDLFFBQUFBLGlFQUFnQixJQUFJQztRQUM5QyxJQUFJO1lBQ0YsTUFBTUMsV0FBVyxNQUFNLElBQUksQ0FBQ0Msa0JBQWtCLENBQUNOLGtCQUFrQjtnQkFBRUc7Z0JBQU9DO1lBQU07WUFDaEYsT0FBTyxJQUFJLENBQUNHLHdCQUF3QixDQUFDRjtRQUN2QyxFQUFFLE9BQU9HLE9BQU87WUFDZCxJQUFJLENBQUNDLFdBQVcsQ0FBQ0Q7WUFDakIsTUFBTUE7UUFDUjtJQUNGO0lBRUEsYUFBcUJGLG1CQUFtQkksS0FBYSxFQUFFQyxTQUFrQyxFQUF5QjtRQUNoSCxNQUFNTixXQUFXLE1BQU1PLE1BQU1kLGNBQWNDLFVBQVUsRUFBRTtZQUNyRGMsUUFBUTtZQUNSQyxTQUFTO2dCQUNQLGdCQUFnQjtZQUNsQjtZQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7Z0JBQUVQO2dCQUFPQztZQUFVO1FBQzFDO1FBRUEsSUFBSSxDQUFDTixTQUFTYSxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJQyxNQUFNLCtCQUFtRCxPQUFwQmQsU0FBU2UsVUFBVTtRQUNwRTtRQUVBLE9BQU9mLFNBQVNnQixJQUFJO0lBQ3RCO0lBRUEsT0FBZWQseUJBQXlCZSxNQUFvQixFQUF3QjtZQUM3RUEsdUJBQUFBO1FBQUwsSUFBSSxHQUFDQSxlQUFBQSxPQUFPQyxJQUFJLGNBQVhELG9DQUFBQSx3QkFBQUEsYUFBYUUsUUFBUSxjQUFyQkYsNENBQUFBLHNCQUF1QkcsS0FBSyxHQUFFO1lBQ2pDLE9BQU87Z0JBQUVDLE9BQU8sRUFBRTtnQkFBRUMsYUFBYTtnQkFBT0MsV0FBVztZQUFHO1FBQ3hEO1FBRUEsT0FBTztZQUNMRixPQUFPSixPQUFPQyxJQUFJLENBQUNDLFFBQVEsQ0FBQ0MsS0FBSyxDQUFDSSxHQUFHLENBQUNDLENBQUFBLE9BQVFBLEtBQUtDLElBQUk7WUFDdkRKLGFBQWFMLE9BQU9DLElBQUksQ0FBQ0MsUUFBUSxDQUFDUSxRQUFRLENBQUNMLFdBQVc7WUFDdERDLFdBQVdOLE9BQU9DLElBQUksQ0FBQ0MsUUFBUSxDQUFDUSxRQUFRLENBQUNKLFNBQVM7UUFDcEQ7SUFDRjtJQUVBLE9BQWVuQixZQUFZRCxLQUFjLEVBQVM7UUFDaER5QixRQUFRekIsS0FBSyxDQUFDLHlCQUF5QkE7UUFDdkMsTUFBTUEsaUJBQWlCVyxRQUFRWCxRQUFRLElBQUlXLE1BQU07SUFDbkQ7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc2VydmljZXMvYmxvZ1NlcnZpY2UudHM/ZTIzNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUeXBlc1xuZXhwb3J0IGludGVyZmFjZSBCbG9nSW1hZ2Uge1xuICB1cmw6IHN0cmluZztcbiAgYWx0VGV4dD86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBCbG9nQXV0aG9yIHtcbiAgbmFtZTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEJsb2dQb3N0IHtcbiAgaWQ6IHN0cmluZztcbiAgdGl0bGU6IHN0cmluZztcbiAgZXhjZXJwdD86IHN0cmluZztcbiAgY29udGVudDogc3RyaW5nO1xuICBwdWJsaXNoZWRBdDogc3RyaW5nO1xuICBpbWFnZT86IEJsb2dJbWFnZTtcbiAgYXV0aG9yPzogQmxvZ0F1dGhvcjtcbiAgYmxvZzoge1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gIH07XG59XG5cbmludGVyZmFjZSBQYWdlSW5mbyB7XG4gIGhhc05leHRQYWdlOiBib29sZWFuO1xuICBlbmRDdXJzb3I6IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIEJsb2dQb3N0RWRnZSB7XG4gIG5vZGU6IEJsb2dQb3N0O1xufVxuXG5pbnRlcmZhY2UgQXJ0aWNsZXNDb25uZWN0aW9uIHtcbiAgZWRnZXM6IEJsb2dQb3N0RWRnZVtdO1xuICBwYWdlSW5mbzogUGFnZUluZm87XG59XG5cbmludGVyZmFjZSBCbG9nUmVzcG9uc2Uge1xuICBkYXRhOiB7XG4gICAgYXJ0aWNsZXM6IEFydGljbGVzQ29ubmVjdGlvbjtcbiAgfTtcbn1cblxuaW50ZXJmYWNlIEZldGNoQmxvZ1Bvc3RzUmVzdWx0IHtcbiAgcG9zdHM6IEJsb2dQb3N0W107XG4gIGhhc05leHRQYWdlOiBib29sZWFuO1xuICBlbmRDdXJzb3I6IHN0cmluZztcbn1cblxuLy8gQ29uc3RhbnRzXG5jb25zdCBBUElfRU5EUE9JTlRTID0ge1xuICBTVE9SRUZST05UOiAnaHR0cDovL2xvY2FsaG9zdDozMDAxL2FwaS9zaG9waWZ5L3N0b3JlZnJvbnQnXG59IGFzIGNvbnN0O1xuXG4vLyBHcmFwaFFMIFF1ZXJpZXNcbmNvbnN0IEJMT0dfUE9TVFNfUVVFUlkgPSBgXG4gIHF1ZXJ5IEdldEJsb2dQb3N0cygkZmlyc3Q6IEludCEsICRhZnRlcjogU3RyaW5nKSB7XG4gICAgYXJ0aWNsZXMoZmlyc3Q6ICRmaXJzdCwgYWZ0ZXI6ICRhZnRlciwgc29ydEtleTogUFVCTElTSEVEX0FULCByZXZlcnNlOiB0cnVlKSB7XG4gICAgICBlZGdlcyB7XG4gICAgICAgIG5vZGUge1xuICAgICAgICAgIGlkXG4gICAgICAgICAgdGl0bGVcbiAgICAgICAgICBleGNlcnB0XG4gICAgICAgICAgY29udGVudFxuICAgICAgICAgIHB1Ymxpc2hlZEF0XG4gICAgICAgICAgaW1hZ2Uge1xuICAgICAgICAgICAgdXJsXG4gICAgICAgICAgICBhbHRUZXh0XG4gICAgICAgICAgfVxuICAgICAgICAgIGF1dGhvciB7XG4gICAgICAgICAgICBuYW1lXG4gICAgICAgICAgfVxuICAgICAgICAgIGJsb2cge1xuICAgICAgICAgICAgdGl0bGVcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHBhZ2VJbmZvIHtcbiAgICAgICAgaGFzTmV4dFBhZ2VcbiAgICAgICAgZW5kQ3Vyc29yXG4gICAgICB9XG4gICAgfVxuICB9XG5gO1xuXG4vLyBTZXJ2aWNlXG5leHBvcnQgY2xhc3MgQmxvZ1NlcnZpY2Uge1xuICBzdGF0aWMgYXN5bmMgZmV0Y2hCbG9nUG9zdHMoZmlyc3Q6IG51bWJlciA9IDIwLCBhZnRlcj86IHN0cmluZyk6IFByb21pc2U8RmV0Y2hCbG9nUG9zdHNSZXN1bHQ+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLm1ha2VHcmFwaFFMUmVxdWVzdChCTE9HX1BPU1RTX1FVRVJZLCB7IGZpcnN0LCBhZnRlciB9KTtcbiAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NCbG9nUG9zdHNSZXNwb25zZShyZXNwb25zZSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHRoaXMuaGFuZGxlRXJyb3IoZXJyb3IpO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBzdGF0aWMgYXN5bmMgbWFrZUdyYXBoUUxSZXF1ZXN0KHF1ZXJ5OiBzdHJpbmcsIHZhcmlhYmxlczogUmVjb3JkPHN0cmluZywgdW5rbm93bj4pOiBQcm9taXNlPEJsb2dSZXNwb25zZT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goQVBJX0VORFBPSU5UUy5TVE9SRUZST05ULCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHF1ZXJ5LCB2YXJpYWJsZXMgfSksXG4gICAgfSk7XG5cbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBmZXRjaCBibG9nIHBvc3RzOiAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgfVxuXG4gIHByaXZhdGUgc3RhdGljIHByb2Nlc3NCbG9nUG9zdHNSZXNwb25zZShyZXN1bHQ6IEJsb2dSZXNwb25zZSk6IEZldGNoQmxvZ1Bvc3RzUmVzdWx0IHtcbiAgICBpZiAoIXJlc3VsdC5kYXRhPy5hcnRpY2xlcz8uZWRnZXMpIHtcbiAgICAgIHJldHVybiB7IHBvc3RzOiBbXSwgaGFzTmV4dFBhZ2U6IGZhbHNlLCBlbmRDdXJzb3I6ICcnIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHBvc3RzOiByZXN1bHQuZGF0YS5hcnRpY2xlcy5lZGdlcy5tYXAoZWRnZSA9PiBlZGdlLm5vZGUpLFxuICAgICAgaGFzTmV4dFBhZ2U6IHJlc3VsdC5kYXRhLmFydGljbGVzLnBhZ2VJbmZvLmhhc05leHRQYWdlLFxuICAgICAgZW5kQ3Vyc29yOiByZXN1bHQuZGF0YS5hcnRpY2xlcy5wYWdlSW5mby5lbmRDdXJzb3JcbiAgICB9O1xuICB9XG5cbiAgcHJpdmF0ZSBzdGF0aWMgaGFuZGxlRXJyb3IoZXJyb3I6IHVua25vd24pOiBuZXZlciB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gQmxvZ1NlcnZpY2U6JywgZXJyb3IpO1xuICAgIHRocm93IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvciA6IG5ldyBFcnJvcignQW4gdW5rbm93biBlcnJvciBvY2N1cnJlZCcpO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIHsgQmxvZ1Bvc3QgfTsgXG4iXSwibmFtZXMiOlsiQVBJX0VORFBPSU5UUyIsIlNUT1JFRlJPTlQiLCJCTE9HX1BPU1RTX1FVRVJZIiwiQmxvZ1NlcnZpY2UiLCJmZXRjaEJsb2dQb3N0cyIsImZpcnN0IiwiYWZ0ZXIiLCJyZXNwb25zZSIsIm1ha2VHcmFwaFFMUmVxdWVzdCIsInByb2Nlc3NCbG9nUG9zdHNSZXNwb25zZSIsImVycm9yIiwiaGFuZGxlRXJyb3IiLCJxdWVyeSIsInZhcmlhYmxlcyIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5Iiwib2siLCJFcnJvciIsInN0YXR1c1RleHQiLCJqc29uIiwicmVzdWx0IiwiZGF0YSIsImFydGljbGVzIiwiZWRnZXMiLCJwb3N0cyIsImhhc05leHRQYWdlIiwiZW5kQ3Vyc29yIiwibWFwIiwiZWRnZSIsIm5vZGUiLCJwYWdlSW5mbyIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/blogService.ts\n"));

/***/ })

});